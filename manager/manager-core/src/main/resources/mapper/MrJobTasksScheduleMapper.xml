<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.vbill.middleware.porter.manager.core.mapper.MrJobTasksScheduleMapper">
    <!-- 通用查询映射结果
    <resultMap id="BaseResultMap" type="MrJobTasksSchedule">
        <result column="id" property="id" />
        <result column="job_id" property="jobId" />
        <result column="swimlane_id" property="swimlaneId" />
        <result column="node_id" property="nodeId" />
        <result column="node_id_ip" property="nodeIdIp" />
        <result column="schema_table" property="schemaTable" />
        <result column="register_time" property="registerTime" />
        <result column="heart_beat_date" property="heartBeatDate" />
        <result column="alarm_number" property="alarmNumber" />
        <result column="last_checked_time" property="lastCheckedTime" />
        <result column="insert_success" property="insertSuccess" />
        <result column="insert_failure" property="insertFailure" />
        <result column="update_success" property="updateSuccess" />
        <result column="update_failure" property="updateFailure" />
        <result column="delete_success" property="deleteSuccess" />
        <result column="delete_failure" property="deleteFailure" />
        <result column="dispose_schedule" property="disposeSchedule" />
        <result column="last_loaded_data_time" property="lastLoadedDataTime" />
        <result column="last_loaded_system_time" property="lastLoadedSystemTime" />
        <result column="create_user_id" property="createUserId" />
        <result column="update_user_id" property="updateUserId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="state" property="state" />
        <result column="iscancel" property="iscancel" />
        <result column="partition_day" property="partitionDay" />
        <result column="remark" property="remark" />
    </resultMap>-->

    <!-- 通用查询结果列
    <sql id="Base_Column_List">
        select id, job_id AS jobId, swimlane_id AS swimlaneId, node_id AS nodeId, node_id_ip AS nodeIdIp, schema_table AS schemaTable, register_time AS registerTime, heart_beat_date AS heartBeatDate, alarm_number AS alarmNumber, last_checked_time AS lastCheckedTime, insert_success AS insertSuccess, insert_failure AS insertFailure, update_success AS updateSuccess, update_failure AS updateFailure, delete_success AS deleteSuccess, delete_failure AS deleteFailure, dispose_schedule AS disposeSchedule, last_loaded_data_time AS lastLoadedDataTime, last_loaded_system_time AS lastLoadedSystemTime, create_user_id AS createUserId, update_user_id AS updateUserId, create_time AS createTime, update_time AS updateTime, state, iscancel, partition_day AS partitionDay, remark from mr_job_tasks_schedule
    </sql>-->

    <!-- 新增 -->
    <insert id="insert">
        insert into mr_job_tasks_schedule(
        job_id,
        job_name,
        swimlane_id,
        node_id,
        node_id_ip,
        schema_table,
        register_time,
        heart_beat_date,
        alarm_number,
        last_checked_time,
        insert_success,
        insert_failure,
        update_success,
        update_failure,
        delete_success,
        delete_failure,
        dispose_schedule,
        last_loaded_data_time,
        last_loaded_system_time,
        update_time,
        partition_day
        ) values (
        #{jobId},
        #{jobName},
        #{swimlaneId},
        #{nodeId},
        #{nodeIdIp},
        #{schemaTable},
        #{registerTime},
        #{heartBeatDate},
        #{alarmNumber},
        #{lastCheckedTime},
        #{insertSuccess},
        #{insertFailure},
        #{updateSuccess},
        #{updateFailure},
        #{deleteSuccess},
        #{deleteFailure},
        #{disposeSchedule},
        #{lastLoadedDataTime},
        #{lastLoadedSystemTime},
        #{updateTime},
        #{partitionDay}
        )
    </insert>

    <!-- 修改 -->
    <update id="update">
        update mr_job_tasks_schedule
        set
        job_id = #{mrJobTasksSchedule.jobId},
        job_name = #{mrJobTasksSchedule.jobName},
        swimlane_id = #{mrJobTasksSchedule.swimlaneId},
        node_id = #{mrJobTasksSchedule.nodeId},
        node_id_ip = #{mrJobTasksSchedule.nodeIdIp},
        schema_table = #{mrJobTasksSchedule.schemaTable},
        register_time = #{mrJobTasksSchedule.registerTime},
        heart_beat_date = #{mrJobTasksSchedule.heartBeatDate},
        alarm_number = #{mrJobTasksSchedule.alarmNumber},
        last_checked_time = #{mrJobTasksSchedule.lastCheckedTime},
        insert_success = #{mrJobTasksSchedule.insertSuccess},
        insert_failure = #{mrJobTasksSchedule.insertFailure},
        update_success = #{mrJobTasksSchedule.updateSuccess},
        update_failure = #{mrJobTasksSchedule.updateFailure},
        delete_success = #{mrJobTasksSchedule.deleteSuccess},
        delete_failure = #{mrJobTasksSchedule.deleteFailure},
        dispose_schedule = #{mrJobTasksSchedule.disposeSchedule},
        last_loaded_data_time = #{mrJobTasksSchedule.lastLoadedDataTime},
        last_loaded_system_time = #{mrJobTasksSchedule.lastLoadedSystemTime},
        create_user_id = #{mrJobTasksSchedule.createUserId},
        update_user_id = #{mrJobTasksSchedule.updateUserId},
        create_time = #{mrJobTasksSchedule.createTime},
        update_time = #{mrJobTasksSchedule.updateTime},
        state = #{mrJobTasksSchedule.state},
        iscancel = #{mrJobTasksSchedule.iscancel},
        partition_day = #{mrJobTasksSchedule.partitionDay},
        remark = #{mrJobTasksSchedule.remark}
        where id = #{id}
    </update>

    <!-- 刪除 -->
    <delete id="delete">
        delete from mr_job_tasks_schedule where id = #{id}
    </delete>

    <!-- 根据主鍵查找 -->
    <select id="selectById" resultType="cn.vbill.middleware.porter.manager.core.entity.MrJobTasksSchedule">
        select id, job_id AS jobId, job_name AS jobName, swimlane_id AS swimlaneId, node_id AS nodeId, node_id_ip AS nodeIdIp, schema_table AS schemaTable, register_time AS registerTime, heart_beat_date AS heartBeatDate, alarm_number AS alarmNumber, last_checked_time AS lastCheckedTime, insert_success AS insertSuccess, insert_failure AS insertFailure, update_success AS updateSuccess, update_failure AS updateFailure, delete_success AS deleteSuccess, delete_failure AS deleteFailure, dispose_schedule AS disposeSchedule, last_loaded_data_time AS lastLoadedDataTime, last_loaded_system_time AS lastLoadedSystemTime, create_user_id AS createUserId, update_user_id AS updateUserId, create_time AS createTime, update_time AS updateTime, state, iscancel, partition_day AS partitionDay, remark from mr_job_tasks_schedule
        where id = #{id}
    </select>

    <!-- 根据任务id和泳道查询 -->
    <select id="selectByJobIdAndSwimlaneId" resultType="cn.vbill.middleware.porter.manager.core.entity.MrJobTasksSchedule">
        select id, job_id AS jobId, job_name AS jobName, swimlane_id AS swimlaneId , schema_table AS schemaTable from mr_job_tasks_schedule
        where job_id = #{jobId} and swimlane_id = #{swimlaneId} and schema_table = #{schemaTable}
    </select>

    <!-- 根据任务id获取泳道 -->
    <select id="selectSwimlaneByJobId" resultType="cn.vbill.middleware.porter.manager.core.entity.MrJobTasksSchedule">
        SELECT DISTINCT swimlane_id AS swimlaneId
        FROM mr_job_tasks_schedule
        WHERE job_id = #{jobId}
    </select>

    <!-- 条件查询获取列表 -->
    <select id="list" resultType="cn.vbill.middleware.porter.manager.core.entity.MrJobTasksSchedule">
        select
        id, job_id AS jobId, job_name AS jobName, swimlane_id AS swimlaneId, node_id AS nodeId, node_id_ip AS nodeIdIp,
        schema_table AS schemaTable, register_time AS registerTime, heart_beat_date AS heartBeatDate,
        alarm_number AS alarmNumber, insert_success AS insertSuccess, insert_failure AS insertFailure,
        update_success AS updateSuccess, update_failure AS updateFailure,
        delete_success AS deleteSuccess, delete_failure AS deleteFailure,
        dispose_schedule AS disposeSchedule, last_loaded_data_time AS lastLoadedDataTime
        from mr_job_tasks_schedule
        <where>
            iscancel = 0
            <if test="heartBeatBeginDate != null and heartBeatBeginDate != ''">
                and heart_beat_date &gt; #{heartBeatBeginDate}
            </if>
            <if test="heartBeatEndDate != null and heartBeatEndDate != ''">
                and heart_beat_date &lt; #{heartBeatEndDate}
            </if>
            and job_id = #{jobId}
        </where>
        order by heart_beat_date desc
    </select>

    <!-- 条件查询列表 -->
    <select id="listJobTasks" resultType="cn.vbill.middleware.porter.manager.core.entity.MrJobTasksSchedule">
        SELECT
        mr_job_tasks_schedule.id,
        mr_job_tasks_schedule.job_id AS jobId,
        job_name AS jobName,
        mr_job_tasks_schedule.swimlane_id AS swimlaneId,
        mr_job_tasks_schedule.node_id AS nodeId,
        mr_job_tasks_schedule.node_id_ip AS nodeIdIp,
        mr_job_tasks_schedule.schema_table AS schemaTable,
        register_time AS registerTime,
        mr_job_tasks_schedule.heart_beat_date AS heartBeatDate,
        mr_job_tasks_schedule.alarm_number AS alarmNumber,
        mr_job_tasks_schedule.insert_success AS insertSuccess,
        mr_job_tasks_schedule.insert_failure AS insertFailure,
        mr_job_tasks_schedule.update_success AS updateSuccess,
        mr_job_tasks_schedule.update_failure AS updateFailure,
        mr_job_tasks_schedule.delete_success AS deleteSuccess,
        mr_job_tasks_schedule.delete_failure AS deleteFailure,
        dispose_schedule AS disposeSchedule,
        last_loaded_data_time AS lastLoadedDataTime,
        ifnull(insertSuccessByDay,0) AS insertSuccessByDay,
        ifnull(insertFailureByDay,0) AS insertFailureByDay,
        ifnull(updateSuccessByDay,0) AS updateSuccessByDay,
        ifnull(updateFailureByDay,0) AS updateFailureByDay,
        ifnull(deleteSuccessByDay,0) AS deleteSuccessByDay,
        ifnull(deleteFailureByDay,0) AS deleteFailureByDay
        FROM
        mr_job_tasks_schedule
        LEFT JOIN (
        SELECT
        job_id,
        schema_table,
        SUM( insert_succes ) AS insertSuccessByDay,
        SUM( insert_failure ) AS insertFailureByDay,
        SUM( update_succes ) AS updateSuccessByDay,
        SUM( update_failure ) AS updateFailureByDay,
        SUM( delete_succes ) AS deleteSuccessByDay,
        SUM( delete_failure ) AS deleteFailureByDay
        FROM
        ${schemaTable}
        GROUP BY
        ${schemaTable}.schema_table
        ) AS temp_tab ON temp_tab.schema_table = mr_job_tasks_schedule.schema_table
        <where>
            iscancel = 0
            <if test="heartBeatBeginDate != null and heartBeatBeginDate != ''">
                and heart_beat_date &gt; #{heartBeatBeginDate}
            </if>
            <if test="heartBeatEndDate != null and heartBeatEndDate != ''">
                and heart_beat_date &lt; #{heartBeatEndDate}
            </if>
            and mr_job_tasks_schedule.job_id = #{jobId}
        </where>
        order by heart_beat_date desc
    </select>

    <!-- 分页All -->
    <select id="pageAll" resultType="java.lang.Integer">
        select count(id) from mr_job_tasks_schedule
        where 1=1
    </select>

    <!-- 分页 -->
    <select id="page" resultType="cn.vbill.middleware.porter.manager.core.entity.MrJobTasksSchedule">
        select id, job_id AS jobId, job_name AS jobName, swimlane_id AS swimlaneId, node_id AS nodeId, node_id_ip AS nodeIdIp, schema_table AS schemaTable, register_time AS registerTime, heart_beat_date AS heartBeatDate, alarm_number AS alarmNumber, last_checked_time AS lastCheckedTime, insert_success AS insertSuccess, insert_failure AS insertFailure, update_success AS updateSuccess, update_failure AS updateFailure, delete_success AS deleteSuccess, delete_failure AS deleteFailure, dispose_schedule AS disposeSchedule, last_loaded_data_time AS lastLoadedDataTime, last_loaded_system_time AS lastLoadedSystemTime, create_user_id AS createUserId, update_user_id AS updateUserId, create_time AS createTime, update_time AS updateTime, state, iscancel, partition_day AS partitionDay, remark from mr_job_tasks_schedule
        where 1=1 limit #{page.offset},#{page.pageSize}
    </select>

    <!-- 验证新增 -->
    <insert id="insertSelective">
        insert into mr_job_tasks_schedule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="jobId != null">
                job_id,
            </if>
            <if test="jobName != null">
                job_name,
            </if>
            <if test="swimlaneId != null">
                swimlane_id,
            </if>
            <if test="nodeId != null">
                node_id,
            </if>
            <if test="nodeIdIp != null">
                node_id_ip,
            </if>
            <if test="schemaTable != null">
                schema_table,
            </if>
            <if test="registerTime != null">
                register_time,
            </if>
            <if test="heartBeatDate != null">
                heart_beat_date,
            </if>
            <if test="alarmNumber != null">
                alarm_number,
            </if>
            <if test="lastCheckedTime != null">
                last_checked_time,
            </if>
            <if test="insertSuccess != null">
                insert_success,
            </if>
            <if test="insertFailure != null">
                insert_failure,
            </if>
            <if test="updateSuccess != null">
                update_success,
            </if>
            <if test="updateFailure != null">
                update_failure,
            </if>
            <if test="deleteSuccess != null">
                delete_success,
            </if>
            <if test="deleteFailure != null">
                delete_failure,
            </if>
            <if test="disposeSchedule != null">
                dispose_schedule,
            </if>
            <if test="lastLoadedDataTime != null">
                last_loaded_data_time,
            </if>
            <if test="lastLoadedSystemTime != null">
                last_loaded_system_time,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="iscancel != null">
                iscancel,
            </if>
            <if test="partitionDay != null">
                partition_day,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="jobId != null">
                #{jobId,jdbcType=VARCHAR},
            </if>
            <if test="jobName != null">
                #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="swimlaneId != null">
                #{swimlaneId,jdbcType=VARCHAR},
            </if>
            <if test="nodeId != null">
                #{nodeId,jdbcType=VARCHAR},
            </if>
            <if test="nodeIdIp != null">
                #{nodeIdIp,jdbcType=VARCHAR},
            </if>
            <if test="schemaTable != null">
                #{schemaTable,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="heartBeatDate != null">
                #{heartBeatDate,jdbcType=TIMESTAMP},
            </if>
            <if test="alarmNumber != null">
                #{alarmNumber,jdbcType=BIGINT},
            </if>
            <if test="lastCheckedTime != null">
                #{lastCheckedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="insertSuccess != null">
                #{insertSuccess,jdbcType=BIGINT},
            </if>
            <if test="insertFailure != null">
                #{insertFailure,jdbcType=BIGINT},
            </if>
            <if test="updateSuccess != null">
                #{updateSuccess,jdbcType=BIGINT},
            </if>
            <if test="updateFailure != null">
                #{updateFailure,jdbcType=BIGINT},
            </if>
            <if test="deleteSuccess != null">
                #{deleteSuccess,jdbcType=BIGINT},
            </if>
            <if test="deleteFailure != null">
                #{deleteFailure,jdbcType=BIGINT},
            </if>
            <if test="disposeSchedule != null">
                #{disposeSchedule,jdbcType=VARCHAR},
            </if>
            <if test="lastLoadedDataTime != null">
                #{lastLoadedDataTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoadedSystemTime != null">
                #{lastLoadedSystemTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="iscancel != null">
                #{iscancel,jdbcType=INTEGER},
            </if>
            <if test="partitionDay != null">
                #{partitionDay,jdbcType=DATE},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!-- 验证修改 -->
    <update id="updateSelective">
        update mr_job_tasks_schedule
        <set>
            <if test="mrJobTasksSchedule.jobId != null">
                job_id = #{mrJobTasksSchedule.jobId,jdbcType=VARCHAR},
            </if>
            <if test="mrJobTasksSchedule.jobName != null">
                job_name = #{mrJobTasksSchedule.jobName,jdbcType=VARCHAR},
            </if>
            <if test="mrJobTasksSchedule.swimlaneId != null">
                swimlane_id = #{mrJobTasksSchedule.swimlaneId,jdbcType=VARCHAR},
            </if>
            <if test="mrJobTasksSchedule.nodeId != null">
                node_id = #{mrJobTasksSchedule.nodeId,jdbcType=VARCHAR},
            </if>
            <if test="mrJobTasksSchedule.nodeIdIp != null">
                node_id_ip = #{mrJobTasksSchedule.nodeIdIp,jdbcType=VARCHAR},
            </if>
            <if test="mrJobTasksSchedule.schemaTable != null">
                schema_table = #{mrJobTasksSchedule.schemaTable,jdbcType=VARCHAR},
            </if>
            <if test="mrJobTasksSchedule.registerTime != null">
                register_time = #{mrJobTasksSchedule.registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mrJobTasksSchedule.heartBeatDate != null">
                heart_beat_date = #{mrJobTasksSchedule.heartBeatDate,jdbcType=TIMESTAMP},
            </if>
            <if test="mrJobTasksSchedule.alarmNumber != null">
                alarm_number = #{mrJobTasksSchedule.alarmNumber,jdbcType=BIGINT},
            </if>
            <if test="mrJobTasksSchedule.lastCheckedTime != null">
                last_checked_time = #{mrJobTasksSchedule.lastCheckedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mrJobTasksSchedule.insertSuccess != null">
                insert_success = #{mrJobTasksSchedule.insertSuccess,jdbcType=BIGINT},
            </if>
            <if test="mrJobTasksSchedule.insertFailure != null">
                insert_failure = #{mrJobTasksSchedule.insertFailure,jdbcType=BIGINT},
            </if>
            <if test="mrJobTasksSchedule.updateSuccess != null">
                update_success = #{mrJobTasksSchedule.updateSuccess,jdbcType=BIGINT},
            </if>
            <if test="mrJobTasksSchedule.updateFailure != null">
                update_failure = #{mrJobTasksSchedule.updateFailure,jdbcType=BIGINT},
            </if>
            <if test="mrJobTasksSchedule.deleteSuccess != null">
                delete_success = #{mrJobTasksSchedule.deleteSuccess,jdbcType=BIGINT},
            </if>
            <if test="mrJobTasksSchedule.deleteFailure != null">
                delete_failure = #{mrJobTasksSchedule.deleteFailure,jdbcType=BIGINT},
            </if>
            <if test="mrJobTasksSchedule.disposeSchedule != null">
                dispose_schedule = #{mrJobTasksSchedule.disposeSchedule,jdbcType=VARCHAR},
            </if>
            <if test="mrJobTasksSchedule.lastLoadedDataTime != null">
                last_loaded_data_time = #{mrJobTasksSchedule.lastLoadedDataTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mrJobTasksSchedule.lastLoadedSystemTime != null">
                last_loaded_system_time = #{mrJobTasksSchedule.lastLoadedSystemTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mrJobTasksSchedule.createUserId != null">
                create_user_id = #{mrJobTasksSchedule.createUserId,jdbcType=BIGINT},
            </if>
            <if test="mrJobTasksSchedule.updateUserId != null">
                update_user_id = #{mrJobTasksSchedule.updateUserId,jdbcType=BIGINT},
            </if>
            <if test="mrJobTasksSchedule.createTime != null">
                create_time = #{mrJobTasksSchedule.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mrJobTasksSchedule.updateTime != null">
                update_time = #{mrJobTasksSchedule.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mrJobTasksSchedule.state != null">
                state = #{mrJobTasksSchedule.state,jdbcType=INTEGER},
            </if>
            <if test="mrJobTasksSchedule.iscancel != null">
                iscancel = #{mrJobTasksSchedule.iscancel,jdbcType=INTEGER},
            </if>
            <if test="mrJobTasksSchedule.partitionDay != null">
                partition_day = #{mrJobTasksSchedule.partitionDay,jdbcType=DATE},
            </if>
            <if test="mrJobTasksSchedule.remark != null">
                remark = #{mrJobTasksSchedule.remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>

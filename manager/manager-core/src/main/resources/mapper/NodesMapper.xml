<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.vbill.middleware.porter.manager.core.mapper.NodesMapper">
    <!-- 通用查询映射结果 
    <resultMap id="BaseResultMap" type="Nodes">
        <result column="id" property="id" />
        <result column="node_id" property="nodeId" />
        <result column="machine_name" property="machineName" />
        <result column="ip_address" property="ipAddress" />
        <result column="pid_number" property="pidNumber" />
        <result column="heart_beat_time" property="heartBeatTime" />
        <result column="state" property="state" />
        <result column="node_type" property="nodeType" />
        <result column="task_push_state" property="taskPushState" />
        <result column="creater" property="creater" />
        <result column="create_time" property="createTime" />
        <result column="iscancel" property="iscancel" />
        <result column="remark" property="remark" />
    </resultMap>-->

    <!-- 通用查询结果列 
    <sql id="Base_Column_List">
        select id, node_id AS nodeId, machine_name AS machineName, ip_address AS ipAddress, pid_number AS pidNumber, heart_beat_time AS heartBeatTime, state, node_type as nodeType, task_push_state as taskPushState, creater, create_time AS createTime, iscancel, remark from b_nodes
    </sql>-->

    <!-- 查询 -->
    <select id="selectList" resultType="cn.vbill.middleware.porter.manager.core.entity.Nodes">
        select id, node_id AS nodeId, machine_name AS machineName, ip_address AS ipAddress, pid_number AS pidNumber, heart_beat_time AS heartBeatTime, state, node_type as nodeType, task_push_state as taskPushState, creater, create_time AS createTime, iscancel, remark from b_nodes
        where iscancel = 0
    </select>

    <!-- 新增 -->
    <insert id="insert">
        insert into b_nodes(
        node_id,
        machine_name,
        ip_address,
        pid_number,
        state,
        task_push_state
        ) values (
        #{nodeId},
        #{machineName},
        #{ipAddress},
        #{pidNumber},
        #{state},
        #{taskPushState}
        )
    </insert>

    <!-- 修改 -->
    <update id="update">
        update b_nodes
        set
        node_id = #{nodes.nodeId},
        machine_name = #{nodes.machineName},
        ip_address = #{nodes.ipAddress},
        pid_number = #{nodes.pidNumber},
        heart_beat_time = #{nodes.heartBeatTime},
        state = #{nodes.state},
        node_type = #{nodes.nodeType},
        task_push_state = #{nodes.taskPushState},
        creater = #{nodes.creater},
        create_time = #{nodes.createTime},
        iscancel = #{nodes.iscancel},
        remark = #{nodes.remark}
        where id = #{id}
    </update>

    <!-- 刪除 -->
    <delete id="delete">
        delete from b_nodes where id = #{id} 
    </delete>

    <!-- 作废 -->
    <update id="cancel">
        update b_nodes
        <set>
            iscancel=1
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 接收、停止任务推送 -->
    <update id="taskPushState">
        update b_nodes
        <set>
            task_push_state=#{taskPushState,jdbcType=VARCHAR}
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 新增 -->
    <insert id="insertState">
        insert into b_nodes(
        node_id,
        machine_name,
        ip_address,
        pid_number,
        state,
        node_type,
        task_push_state,
        heart_beat_time
        ) values (
        #{nodeId},
        #{machineName},
        #{ipAddress},
        #{pidNumber},
        #{state},
        2,
        #{taskPushState},
        #{heartBeatTime}
        )
    </insert>

    <!-- 修改节点状态 -->
    <update id="updateState">
        update b_nodes
        set
          state = #{state},
          machine_name = #{machineName},
          ip_address = #{ipAddress},
          pid_number = #{pidNumber},
          task_push_state = #{taskPushState},
          heart_beat_time = #{heartBeatTime}
        where node_id = #{nodeId}
    </update>

    <!-- 修改最后时间 -->
    <update id="updateHeartBeatTime">
        update b_nodes
        set
          state = 1 ,
          task_push_state = #{taskPushState},
          machine_name = #{machineName},
          ip_address = #{ipAddress},
          pid_number = #{pidNumber},
          heart_beat_time = #{heartBeatTime}
        where node_id = #{nodeId}
    </update>

    <!-- 根据主鍵查找 -->
    <select id="selectById" resultType="cn.vbill.middleware.porter.manager.core.entity.Nodes">
        select id, node_id AS nodeId, machine_name AS machineName, ip_address AS ipAddress, pid_number AS pidNumber, heart_beat_time AS heartBeatTime, state, node_type as nodeType, task_push_state as taskPushState, creater, create_time AS createTime, iscancel, remark from b_nodes
        where id = #{id}
    </select>

    <select id="selectByNodeId" resultType="cn.vbill.middleware.porter.manager.core.entity.Nodes">
        select id, node_id AS nodeId, machine_name AS machineName, ip_address AS ipAddress, pid_number AS pidNumber, heart_beat_time AS heartBeatTime, state, node_type as nodeType, task_push_state as taskPushState, creater, create_time AS createTime, iscancel, remark from b_nodes
        where node_id = #{nodeId}
    </select>

    <!-- 验证nodeId是否重复 -->
    <select id="testNodeId" resultType="java.lang.Integer">
        SELECT count(id) FROM b_nodes
        WHERE node_id = #{nodeId}
    </select>

    <!-- 分页All -->
    <select id="pageAll" resultType="java.lang.Integer">
        select count(id) from b_nodes
        <where>
            iscancel = 0
            <if test="state != null and state != ''">
                and state = #{state}
            </if>
            <if test="nodeId != null and nodeId != ''">
                and node_id = #{nodeId}
            </if>
            <if test="ipAddress != null and ipAddress != ''">
                and ip_address LIKE CONCAT('%', #{ipAddress}, '%')
            </if>
            <if test="machineName != null and machineName != ''">
                and machine_name LIKE CONCAT('%', #{machineName}, '%')
            </if>
            <if test="roleDataControl.roleCode == 'A9999'">
                and node_id in (select node_id from b_nodes_owner where iscancel = 0 and owner_id = #{roleDataControl.userId})
            </if>
        </where>
    </select>

    <!-- 分页 -->
    <select id="page" resultType="cn.vbill.middleware.porter.manager.core.entity.Nodes">
        select id, node_id AS nodeId, machine_name AS machineName, ip_address AS ipAddress, pid_number AS pidNumber,
        heart_beat_time AS heartBeatTime, state, node_type as nodeType, task_push_state as taskPushState
        from b_nodes
        <where>
            iscancel = 0
            <if test="nodeId != null and nodeId != ''">
                and node_id = #{nodeId}
            </if>
            <if test="ipAddress != null and ipAddress != ''">
                and ip_address LIKE CONCAT('%', #{ipAddress}, '%')
            </if>
            <if test="state != null and state != ''">
                and state = #{state}
            </if>
            <if test="machineName != null and machineName != ''">
                and machine_name LIKE CONCAT('%',#{machineName},'%')
            </if>
            <if test='roleDataControl.roleCode == "A9999"'>
                and node_id in (select node_id from b_nodes_owner where iscancel = 0 and owner_id = #{roleDataControl.userId})
            </if>
        </where>
        ORDER BY state ASC, heart_beat_time desc
        limit #{page.offset},#{page.pageSize}
    </select>

    <!-- 验证新增 -->
    <insert id="insertSelective">
        insert into b_nodes
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="nodeId != null">
                node_id,
            </if>
            <if test="machineName != null">
                machine_name,
            </if>
            <if test="ipAddress != null">
                ip_address,
            </if>
            <if test="pidNumber != null">
                pid_number,
            </if>
            <if test="heartBeatTime != null">
                heart_beat_time,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="nodeType != null">
                node_type,
            </if>
            <if test="taskPushState != null">
                task_push_state,
            </if>
            <if test="creater != null">
                creater,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="iscancel != null">
                iscancel,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="nodeId != null">
                #{nodeId,jdbcType=VARCHAR},
            </if>
            <if test="machineName != null">
                #{machineName,jdbcType=VARCHAR},
            </if>
            <if test="ipAddress != null">
                #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="pidNumber != null">
                #{pidNumber,jdbcType=VARCHAR},
            </if>
            <if test="heartBeatTime != null">
                #{heartBeatTime,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="nodeType != null">
                #{nodeType,jdbcType=VARCHAR},
            </if>
            <if test="taskPushState != null">
                #{task_push_state,jdbcType=VARCHAR},
            </if>
            <if test="creater != null">
                #{creater,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="iscancel != null">
                #{iscancel,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!-- 验证修改 -->
    <update id="updateSelective">
        update b_nodes
        <set>
            <if test="nodes.nodeId != null">
                node_id = #{nodes.nodeId,jdbcType=VARCHAR},
            </if>
            <if test="nodes.machineName != null">
                machine_name = #{nodes.machineName,jdbcType=VARCHAR},
            </if>
            <if test="nodes.ipAddress != null">
                ip_address = #{nodes.ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="nodes.pidNumber != null">
                pid_number = #{nodes.pidNumber,jdbcType=VARCHAR},
            </if>
            <if test="nodes.heartBeatTime != null">
                heart_beat_time = #{nodes.heartBeatTime,jdbcType=VARCHAR},
            </if>
            <if test="nodes.state != null">
                state = #{nodes.state,jdbcType=INTEGER},
            </if>
            <if test="nodes.nodeType != null">
                node_type = #{nodes.nodeType,jdbcType=VARCHAR},
            </if>
            <if test="nodes.taskPushState != null">
                task_push_state = #{nodes.taskPushState,jdbcType=VARCHAR},
            </if>
            <if test="nodes.creater != null">
                creater = #{nodes.creater,jdbcType=BIGINT},
            </if>
            <if test="nodes.createTime != null">
                create_time = #{nodes.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="nodes.iscancel != null">
                iscancel = #{nodes.iscancel,jdbcType=INTEGER},
            </if>
            <if test="nodes.remark != null">
                remark = #{nodes.remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>

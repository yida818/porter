<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.vbill.middleware.porter.manager.core.mapper.MrNodesScheduleMapper">
    <!-- 通用查询映射结果
    <resultMap id="BaseResultMap" type="MrNodesSchedule">
        <result column="id" property="id" />
        <result column="node_id" property="nodeId" />
        <result column="computer_name" property="computerName" />
        <result column="ip_address" property="ipAddress" />
        <result column="heart_beat_date" property="heartBeatDate" />
        <result column="process_number" property="processNumber" />
        <result column="job_id_json" property="jobIdJson" />
        <result column="job_name_json" property="jobNameJson" />
        <result column="create_user_id" property="createUserId" />
        <result column="update_user_id" property="updateUserId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="state" property="state" />
        <result column="iscancel" property="iscancel" />
        <result column="partition_day" property="partitionDay" />
        <result column="remark" property="remark" />
        <result column="health_level" property="healthLevel" />
        <result column="health_level_desc" property="healthLevelDesc" />
    </resultMap>-->

    <!-- 通用查询结果列
    <sql id="Base_Column_List">
        select id, node_id AS nodeId, computer_name AS computerName, ip_address AS ipAddress, heart_beat_date AS heartBeatDate, process_number AS processNumber, job_id_json AS jobIdJson, job_name_json AS jobNameJson, create_user_id AS createUserId, update_user_id AS updateUserId, create_time AS createTime, update_time AS updateTime, state, iscancel, partition_day AS partitionDay, remark from mr_nodes_schedule
    </sql>-->

    <!-- 新增 -->
    <insert id="insert">
        insert into mr_nodes_schedule(
        node_id,
        computer_name,
        ip_address,
        heart_beat_date,
        process_number,
        job_id_json,
        job_name_json,
        update_time,
        partition_day,
        health_level,
        health_level_desc
        ) values (
        #{nodeId},
        #{computerName},
        #{ipAddress},
        #{heartBeatDate},
        #{processNumber},
        #{jobIdJson},
        #{jobNameJson},
        #{updateTime},
        #{partitionDay},
        #{healthLevel},
        #{healthLevelDesc}
        )
    </insert>

    <!-- 修改 -->
    <update id="update">
        update mr_nodes_schedule
        set
        node_id = #{mrNodesSchedule.nodeId},
        computer_name = #{mrNodesSchedule.computerName},
        ip_address = #{mrNodesSchedule.ipAddress},
        heart_beat_date = #{mrNodesSchedule.heartBeatDate},
        process_number = #{mrNodesSchedule.processNumber},
        job_id_json = #{mrNodesSchedule.jobIdJson},
        job_name_json = #{mrNodesSchedule.jobNameJson},
        create_user_id = #{mrNodesSchedule.createUserId},
        update_user_id = #{mrNodesSchedule.updateUserId},
        create_time = #{mrNodesSchedule.createTime},
        update_time = #{mrNodesSchedule.updateTime},
        state = #{mrNodesSchedule.state},
        iscancel = #{mrNodesSchedule.iscancel},
        partition_day = #{mrNodesSchedule.partitionDay},
        remark = #{mrNodesSchedule.remark},
        health_level = #{mrNodesSchedule.healthLevel},
        health_level_desc = #{mrNodesSchedule.healthLevelDesc}
        where id = #{id}
    </update>

    <!-- 刪除 -->
    <delete id="delete">
        delete from mr_nodes_schedule where id = #{id}
    </delete>

    <!-- 根据主鍵查找 -->
    <select id="selectById" resultType="cn.vbill.middleware.porter.manager.core.entity.MrNodesSchedule">
        select
        id, node_id AS nodeId, computer_name AS computerName, ip_address AS ipAddress, heart_beat_date AS heartBeatDate,
        process_number AS processNumber, job_id_json AS jobIdJson, job_name_json AS jobNameJson, create_user_id AS createUserId,
        update_user_id AS updateUserId, create_time AS createTime, update_time AS updateTime, state, iscancel, partition_day AS partitionDay, remark,
        health_level AS healthLevel, health_level_desc AS healthLevelDesc
        from mr_nodes_schedule
        where id = #{id}
    </select>

    <!-- 分页All -->
    <select id="pageAll" resultType="java.lang.Integer">
        select count(id) from mr_nodes_schedule
        <where>
            iscancel = 0
            <if test="ipAddress != null and ipAddress !=''">
                and ip_address LIKE CONCAT('%',#{ipAddress},'%')
            </if>
            <if test="computerName != null and computerName != ''">
                and computer_name LIKE CONCAT('%',#{computerName},'%')
            </if>
            <if test="roleDataControl.roleCode == 'A9999'">
                and node_id in (select node_id from b_nodes_owner where owner_level = 1 and owner_id = #{roleDataControl.userId} and iscancel = 0)
            </if>
        </where>
    </select>

    <!-- 分页 -->
    <select id="page" resultType="cn.vbill.middleware.porter.manager.core.entity.MrNodesSchedule">
        select
        id, node_id AS nodeId, computer_name AS computerName, ip_address AS ipAddress, heart_beat_date AS heartBeatDate,
        process_number AS processNumber, job_id_json AS jobIdJson,job_name_json AS jobNameJson,
        health_level AS healthLevel, health_level_desc AS healthLevelDesc
        from mr_nodes_schedule
        <where>
            iscancel = 0
            <if test="ipAddress != null and ipAddress !=''">
                and ip_address LIKE CONCAT('%',#{ipAddress},'%')
            </if>
            <if test="computerName != null and computerName != ''">
                and computer_name LIKE CONCAT('%',#{computerName},'%')
            </if>
            <if test="roleDataControl.roleCode == 'A9999'">
                and node_id in (select node_id from b_nodes_owner where owner_level = 1 and owner_id = #{roleDataControl.userId} and iscancel = 0)
            </if>
        </where>
        ORDER by heart_beat_date DESC
        limit #{page.offset},#{page.pageSize}
    </select>

    <!-- 验证新增 -->
    <insert id="insertSelective">
        insert into mr_nodes_schedule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="nodeId != null">
                node_id,
            </if>
            <if test="computerName != null">
                computer_name,
            </if>
            <if test="ipAddress != null">
                ip_address,
            </if>
            <if test="heartBeatDate != null">
                heart_beat_date,
            </if>
            <if test="processNumber != null">
                process_number,
            </if>
            <if test="jobIdJson != null">
                job_id_json,
            </if>
            <if test="jobNameJson != null">
                job_name_json,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="iscancel != null">
                iscancel,
            </if>
            <if test="partitionDay != null">
                partition_day,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="healthLevel != null">
                health_level,
            </if>
            <if test="healthLevelDesc != null">
                health_level_desc,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="nodeId != null">
                #{nodeId,jdbcType=VARCHAR},
            </if>
            <if test="computerName != null">
                #{computerName,jdbcType=VARCHAR},
            </if>
            <if test="ipAddress != null">
                #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="heartBeatDate != null">
                #{heartBeatDate,jdbcType=TIMESTAMP},
            </if>
            <if test="processNumber != null">
                #{processNumber,jdbcType=VARCHAR},
            </if>
            <if test="jobIdJson != null">
                #{jobIdJson,jdbcType=VARCHAR},
            </if>
            <if test="jobNameJson != null">
                #{jobNameJson,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="iscancel != null">
                #{iscancel,jdbcType=INTEGER},
            </if>
            <if test="partitionDay != null">
                #{partitionDay,jdbcType=DATE},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="healthLevel != null">
                #{healthLevel,jdbcType=VARCHAR},
            </if>
            <if test="healthLevelDesc != null">
                #{healthLevelDesc,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <insert id="copydata">
        insert into ${mrNodesScheduleName} select * from mr_nodes_schedule
    </insert>

    <!-- 验证修改 -->
    <update id="updateSelective">
        update mr_nodes_schedule
        <set>
            <if test="mrNodesSchedule.nodeId != null">
                node_id = #{mrNodesSchedule.nodeId,jdbcType=VARCHAR},
            </if>
            <if test="mrNodesSchedule.computerName != null">
                computer_name = #{mrNodesSchedule.computerName,jdbcType=VARCHAR},
            </if>
            <if test="mrNodesSchedule.ipAddress != null">
                ip_address = #{mrNodesSchedule.ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="mrNodesSchedule.heartBeatDate != null">
                heart_beat_date = #{mrNodesSchedule.heartBeatDate,jdbcType=TIMESTAMP},
            </if>
            <if test="mrNodesSchedule.processNumber != null">
                process_number = #{mrNodesSchedule.processNumber,jdbcType=VARCHAR},
            </if>
            <if test="mrNodesSchedule.jobIdJson != null">
                job_id_json = #{mrNodesSchedule.jobIdJson,jdbcType=VARCHAR},
            </if>
            <if test="mrNodesSchedule.jobNameJson != null">
                job_name_json = #{mrNodesSchedule.jobNameJson,jdbcType=VARCHAR},
            </if>
            <if test="mrNodesSchedule.createUserId != null">
                create_user_id = #{mrNodesSchedule.createUserId,jdbcType=BIGINT},
            </if>
            <if test="mrNodesSchedule.updateUserId != null">
                update_user_id = #{mrNodesSchedule.updateUserId,jdbcType=BIGINT},
            </if>
            <if test="mrNodesSchedule.createTime != null">
                create_time = #{mrNodesSchedule.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mrNodesSchedule.updateTime != null">
                update_time = #{mrNodesSchedule.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mrNodesSchedule.state != null">
                state = #{mrNodesSchedule.state,jdbcType=INTEGER},
            </if>
            <if test="mrNodesSchedule.iscancel != null">
                iscancel = #{mrNodesSchedule.iscancel,jdbcType=INTEGER},
            </if>
            <if test="mrNodesSchedule.partitionDay != null">
                partition_day = #{mrNodesSchedule.partitionDay,jdbcType=DATE},
            </if>
            <if test="mrNodesSchedule.remark != null">
                remark = #{mrNodesSchedule.remark,jdbcType=VARCHAR},
            </if>
            <if test="mrNodesSchedule.healthLevel != null">
                health_level = #{mrNodesSchedule.healthLevel,jdbcType=VARCHAR},
            </if>
            <if test="mrNodesSchedule.healthLevelDesc != null">
                health_level_desc = #{mrNodesSchedule.healthLevelDesc,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id}
    </update>

    <!-- 根据节点id查询-->
    <select id="selectByNodeId" resultType="cn.vbill.middleware.porter.manager.core.entity.MrNodesSchedule">
        select id, node_id AS nodeId from mr_nodes_schedule where node_id = #{nodeId}
    </select>
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.vbill.middleware.porter.manager.core.mapper.MrJobTasksMonitorMapper">
    <!-- 通用查询映射结果
    <resultMap id="BaseResultMap" type="MrJobTasksMonitor">
        <result column="id" property="id" />
        <result column="job_id" property="jobId" />
        <result column="node_id" property="nodeId" />
        <result column="node_id_ip" property="nodeIdIp" />
        <result column="swimlane_id" property="swimlaneId" />
        <result column="schema_table" property="schemaTable" />
        <result column="monitor_date" property="monitorDate" />
        <result column="monitor_ymd" property="monitorYmd" />
        <result column="monitor_hour" property="monitorHour" />
        <result column="monitor_minute" property="monitorMinute" />
        <result column="monitor_second" property="monitorSecond" />
        <result column="insert_succes" property="insertSucces" />
        <result column="insert_failure" property="insertFailure" />
        <result column="update_succes" property="updateSucces" />
        <result column="update_failure" property="updateFailure" />
        <result column="delete_succes" property="deleteSucces" />
        <result column="delete_failure" property="deleteFailure" />
        <result column="alarm_number" property="alarmNumber" />
        <result column="partition_day" property="partitionDay" />
    </resultMap>-->

    <!-- 通用查询结果列
    <sql id="Base_Column_List">
        select id, job_id AS jobId, node_id AS nodeId, node_id_ip AS nodeIdIp, swimlane_id AS swimlaneId, schema_table as schemaTable, monitor_date AS monitorDate, monitor_ymd AS monitorYmd, monitor_hour AS monitorHour, monitor_minute AS monitorMinute, monitor_second AS monitorSecond, insert_succes AS insertSucces, insert_failure AS insertFailure, update_succes AS updateSucces, update_failure AS updateFailure, delete_succes AS deleteSucces, delete_failure AS deleteFailure, partition_day AS partitionDay from mr_job_tasks_monitor
    </sql>-->

    <!-- 新增 -->
    <insert id="insert">
        insert into ${monitorTable}(
        job_id,
        node_id,
        node_id_ip,
        swimlane_id,
        schema_table,
        monitor_date,
        monitor_ymd,
        monitor_hour,
        monitor_minute,
        monitor_second,
        insert_succes,
        insert_failure,
        update_succes,
        update_failure,
        delete_succes,
        delete_failure,
        alarm_number,
        partition_day
        ) values (
        #{mrJobTasksMonitor.jobId},
        #{mrJobTasksMonitor.nodeId},
        #{mrJobTasksMonitor.nodeIdIp},
        #{mrJobTasksMonitor.swimlaneId},
        #{mrJobTasksMonitor.schemaTable},
        #{mrJobTasksMonitor.monitorDate},
        #{mrJobTasksMonitor.monitorYmd},
        #{mrJobTasksMonitor.monitorHour},
        #{mrJobTasksMonitor.monitorMinute},
        #{mrJobTasksMonitor.monitorSecond},
        #{mrJobTasksMonitor.insertSucces},
        #{mrJobTasksMonitor.insertFailure},
        #{mrJobTasksMonitor.updateSucces},
        #{mrJobTasksMonitor.updateFailure},
        #{mrJobTasksMonitor.deleteSucces},
        #{mrJobTasksMonitor.deleteFailure},
        #{mrJobTasksMonitor.alarmNumber},
        #{mrJobTasksMonitor.partitionDay}
        )
    </insert>

    <!-- 修改 -->
    <update id="update">
        update mr_job_tasks_monitor
        set
        job_id = #{mrJobTasksMonitor.jobId},
        node_id = #{mrJobTasksMonitor.nodeId},
        node_id_ip = #{mrJobTasksMonitor.nodeIdIp},
        swimlane_id = #{mrJobTasksMonitor.swimlaneId},
        schema_table = #{mrJobTasksMonitor.schemaTable},
        monitor_date = #{mrJobTasksMonitor.monitorDate},
        monitor_ymd = #{mrJobTasksMonitor.monitorYmd},
        monitor_hour = #{mrJobTasksMonitor.monitorHour},
        monitor_minute = #{mrJobTasksMonitor.monitorMinute},
        monitor_second = #{mrJobTasksMonitor.monitorSecond},
        insert_succes = #{mrJobTasksMonitor.insertSucces},
        insert_failure = #{mrJobTasksMonitor.insertFailure},
        update_succes = #{mrJobTasksMonitor.updateSucces},
        update_failure = #{mrJobTasksMonitor.updateFailure},
        delete_succes = #{mrJobTasksMonitor.deleteSucces},
        delete_failure = #{mrJobTasksMonitor.deleteFailure},
        alarm_number = #{mrJobTasksMonitor.alarmNumber},
        partition_day = #{mrJobTasksMonitor.partitionDay}
        where id = #{id}
    </update>

    <!-- 刪除 -->
    <delete id="delete">
        delete from mr_job_tasks_monitor where id = #{id}
    </delete>

    <!-- 根据主鍵查找 -->
    <select id="selectById" resultType="cn.vbill.middleware.porter.manager.core.entity.MrJobTasksMonitor">
        select id, job_id AS jobId, node_id AS nodeId, node_id_ip AS nodeIdIp, swimlane_id AS swimlaneId, schema_table as schemaTable, monitor_date AS monitorDate, monitor_ymd AS monitorYmd, monitor_hour AS monitorHour, monitor_minute AS monitorMinute, monitor_second AS monitorSecond, insert_succes AS insertSucces, insert_failure AS insertFailure, update_succes AS updateSucces, update_failure AS updateFailure, delete_succes AS deleteSucces, delete_failure AS deleteFailure, alarm_number as alarmNumber, partition_day AS partitionDay from mr_job_tasks_monitor
        where id = #{id}
    </select>

    <!-- 分页All -->
    <select id="pageAll" resultType="java.lang.Integer">
        select count(id) from mr_job_tasks_monitor
        where 1=1
    </select>

    <!-- 分页 -->
    <select id="page" resultType="cn.vbill.middleware.porter.manager.core.entity.MrJobTasksMonitor">
        select id, job_id AS jobId, node_id AS nodeId, node_id_ip AS nodeIdIp, swimlane_id AS swimlaneId, schema_table as schemaTable, monitor_date AS monitorDate, monitor_ymd AS monitorYmd, monitor_hour AS monitorHour, monitor_minute AS monitorMinute, monitor_second AS monitorSecond, insert_succes AS insertSucces, insert_failure AS insertFailure, update_succes AS updateSucces, update_failure AS updateFailure, delete_succes AS deleteSucces, delete_failure AS deleteFailure, alarm_number as alarmNumber, partition_day AS partitionDay from mr_job_tasks_monitor
        where 1=1 limit #{page.offset},#{page.pageSize}
    </select>

    <select id="selectByJobSwimlane" resultType="cn.vbill.middleware.porter.manager.core.entity.MrJobTasksMonitor">
        select id, job_id AS jobId, node_id AS nodeId, node_id_ip AS nodeIdIp, swimlane_id AS swimlaneId, schema_table as schemaTable, monitor_date AS monitorDate, monitor_ymd AS monitorYmd, monitor_hour AS monitorHour, monitor_minute AS monitorMinute, monitor_second AS monitorSecond, insert_succes AS insertSucces, insert_failure AS insertFailure, update_succes AS updateSucces, update_failure AS updateFailure, delete_succes AS deleteSucces, delete_failure AS deleteFailure, alarm_number as alarmNumber, partition_day AS partitionDay from mr_job_tasks_monitor
        where job_id = #{jobId} and swimlane_id = #{swimlaneId} and schema_table = #{schemaTable} ORDER BY monitor_date DESC limit #{startRow},#{intervalSize} 
    </select>

    <!-- 实时查看监控数据(增加查看过去某一天的监控数据) -->
    <select id="selectByJobSwimlaneDetail" resultType="cn.vbill.middleware.porter.manager.core.entity.MrJobTasksMonitor">
        SELECT
            id,
            job_id AS jobId,
            node_id AS nodeId,
            node_id_ip AS nodeIdIp,
            swimlane_id AS swimlaneId,
            schema_table AS schemaTable,
            monitor_date AS monitorDate,
            monitor_ymd AS monitorYmd,
            monitor_hour AS monitorHour,
            monitor_minute AS monitorMinute,
            monitor_second AS monitorSecond,
            insert_succes AS insertSucces,
            insert_failure AS insertFailure,
            update_succes AS updateSucces,
            update_failure AS updateFailure,
            delete_succes AS deleteSucces,
            delete_failure AS deleteFailure,
            alarm_number AS alarmNumber,
            partition_day AS partitionDay
        FROM
            ${monitorTable}
        WHERE
            job_id = #{jobId} and swimlane_id = #{swimlaneId} and schema_table = #{schemaTable}
            and monitor_date between #{startDate} and #{endDate}
        ORDER BY monitor_date
    </select>
</mapper>

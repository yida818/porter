group 'cn.vbill.middleware.porter.manager'
apply plugin: 'application'
apply plugin: 'com.github.node-gradle.node'
archivesBaseName = 'porter-manager-boot'
mainClassName = "cn.vbill.middleware.porter.manager.ManagerBootApplication"
ext {
    runJars=archivesBaseName + "-" + version + ".jar"
    runJarsPlaceHolder="{{RUN_JAR}}"
    mainClassPlaceHolder="{{MAIN_CLASS}}"
}


sourceSets {
    main {
    }
}
processResources {
    exclude(
            // "**/**"
    )
}

task moveOutFromJar(type: Copy) {
    sourceSets.main.resources.srcDirs.each {
        from it
        into buildDir.getPath() + "/config"
    }
}




jar {
    doFirst {
        manifest {
            if (!configurations.compile.isEmpty()) {
                attributes(
                        'Class-Path': configurations.compile.collect{it.getName()}.join(' '),
                        'Main-Class': mainClassName)
            }
        }
    }
}

startScripts {
    doLast {
        unixScript.text = resources.text.fromFile('script/unixStart.sh').asString()
                .replace(runJarsPlaceHolder, runJars).replace(mainClassPlaceHolder, mainClassName)
        windowsScript.text = resources.text.fromFile('script/windowsStart.bat').asString()
                .replace(runJarsPlaceHolder, runJars).replace(mainClassPlaceHolder, mainClassName)
    }
}

distributions {
    main {
        contents {
            from ("script/shutdown.sh") {
                into "bin"
                fileMode = 0755
            }
            from (buildDir.getPath() + "/config") {
                into "config"
            }
        }
    }
}


dependencies {
    compile project(':manager:manager-web')
    implementation "org.springframework.boot:spring-boot-starter-web:${springVersion}"
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-actuator:${springVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springVersion}"
}



buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.node-gradle:gradle-node-plugin:1.3.0"
    }
}

node {
    version = '10.15.3'
    yarnVersion = '1.15.2'
    download = true
    nodeModulesDir = file("${rootProject.projectDir}/porter-ui")
    yarnWorkDir = file("${project.buildDir}/yarn")
    npmWorkDir = file("${project.buildDir}/npm")
    workDir = file("${project.buildDir}/node")
}

task buildPorterUI(type: YarnTask) {
    environment = System.getenv() + [
            'OUTPUT': project.buildDir.path  + "/classes/java/main/public",
            'API' : '/manager',
            'NODE_ENV' : 'production'
    ]
    args= ["node", "${rootProject.projectDir}/porter-ui/builder/build.js"]
}
buildPorterUI.dependsOn yarn_install
processResources.dependsOn moveOutFromJar,buildPorterUI